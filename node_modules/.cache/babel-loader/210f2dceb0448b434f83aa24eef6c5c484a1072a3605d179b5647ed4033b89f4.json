{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nconst useInsertUser = () => {\n  _s();\n  const [user, setUser] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [cnpj, setCnpj] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleNameChange = e => {\n    const inputValue = e.target.value;\n    const filteredValue = inputValue.replace(/[^a-zA-Z.\\s]/g, \"\");\n    setName(filteredValue);\n  };\n  const handleUserChange = e => {\n    const inputValue = e.target.value;\n    const filteredValue = inputValue.replace(/[^a-zA-Z.\\s]/g, \"\");\n    setUser(filteredValue);\n  };\n  const handleRegister = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"http://localhost:3000/register\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user,\n          name,\n          company,\n          cnpj\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.type === \"s\") {\n          toast.success(data.message);\n          setName(\"\");\n          setUser(\"\");\n          setCompany(\"\");\n          setCnpj(\"\");\n        } else if (data.type === \"e\") {\n          toast.error(data.message);\n        }\n      }\n    } catch (error) {\n      console.error(\"Erro ao registrar usuário:\", error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    user,\n    setUser,\n    name,\n    setName,\n    company,\n    setCompany,\n    cnpj,\n    setCnpj,\n    loading,\n    handleUserChange,\n    handleNameChange,\n    handleRegister\n  };\n};\n_s(useInsertUser, \"/zVegZdQw2jUFam2Wi5p/7X99tw=\");\nexport default useInsertUser;","map":{"version":3,"names":["useState","toast","useInsertUser","_s","user","setUser","name","setName","company","setCompany","cnpj","setCnpj","loading","setLoading","handleNameChange","e","inputValue","target","value","filteredValue","replace","handleUserChange","handleRegister","response","fetch","method","credentials","headers","body","JSON","stringify","ok","data","json","type","success","message","error","console"],"sources":["C:/Users/joaop/OneDrive/Área de Trabalho/Estudo React/Sales Buddy/WEB/web/src/hooks/useInsertUser.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useInsertUser = () => {\r\n  const [user, setUser] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [cnpj, setCnpj] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleNameChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    const filteredValue = inputValue.replace(/[^a-zA-Z.\\s]/g, \"\");\r\n    setName(filteredValue);\r\n  };\r\n\r\n  const handleUserChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    const filteredValue = inputValue.replace(/[^a-zA-Z.\\s]/g, \"\");\r\n    setUser(filteredValue);\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const response = await fetch(\"http://localhost:3000/register\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          name,\r\n          company,\r\n          cnpj,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.type === \"s\") {\r\n          toast.success(data.message);\r\n          setName(\"\");\r\n          setUser(\"\");\r\n          setCompany(\"\");\r\n          setCnpj(\"\");\r\n        } else if (data.type === \"e\") {\r\n          toast.error(data.message);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao registrar usuário:\", error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    user,\r\n    setUser,\r\n    name,\r\n    setName,\r\n    company,\r\n    setCompany,\r\n    cnpj,\r\n    setCnpj,\r\n    loading,\r\n    handleUserChange,\r\n    handleNameChange,\r\n    handleRegister,\r\n  };\r\n};\r\n\r\nexport default useInsertUser;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,UAAU,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACjC,MAAMC,aAAa,GAAGH,UAAU,CAACI,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;IAC7Db,OAAO,CAACY,aAAa,CAAC;EACxB,CAAC;EAED,MAAME,gBAAgB,GAAIN,CAAC,IAAK;IAC9B,MAAMC,UAAU,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACjC,MAAMC,aAAa,GAAGH,UAAU,CAACI,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;IAC7Df,OAAO,CAACc,aAAa,CAAC;EACxB,CAAC;EAED,MAAMG,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACFT,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB1B,IAAI;UACJE,IAAI;UACJE,OAAO;UACPE;QACF,CAAC;MACH,CAAC,CAAC;MAEF,IAAIa,QAAQ,CAACQ,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,IAAI,KAAK,GAAG,EAAE;UACrBjC,KAAK,CAACkC,OAAO,CAACH,IAAI,CAACI,OAAO,CAAC;UAC3B7B,OAAO,CAAC,EAAE,CAAC;UACXF,OAAO,CAAC,EAAE,CAAC;UACXI,UAAU,CAAC,EAAE,CAAC;UACdE,OAAO,CAAC,EAAE,CAAC;QACb,CAAC,MAAM,IAAIqB,IAAI,CAACE,IAAI,KAAK,GAAG,EAAE;UAC5BjC,KAAK,CAACoC,KAAK,CAACL,IAAI,CAACI,OAAO,CAAC;QAC3B;MACF;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACD,OAAO,CAAC;IAC5D,CAAC,SAAS;MACRvB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IACLT,IAAI;IACJC,OAAO;IACPC,IAAI;IACJC,OAAO;IACPC,OAAO;IACPC,UAAU;IACVC,IAAI;IACJC,OAAO;IACPC,OAAO;IACPS,gBAAgB;IAChBP,gBAAgB;IAChBQ;EACF,CAAC;AACH,CAAC;AAACnB,EAAA,CAtEID,aAAa;AAwEnB,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}