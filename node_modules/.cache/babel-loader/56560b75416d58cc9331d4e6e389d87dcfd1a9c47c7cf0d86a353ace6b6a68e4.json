{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nconst useAuthentication = () => {\n  _s();\n  const [user, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user,\n          password\n        })\n      });\n      if (user === \"\" || user === null || password === \"\" || password === null) {\n        toast.error(\"Preencha os campos para realizar o Login!\");\n      } else if (response.ok) {\n        toast.success(\"Usuário Logado com sucesso!\");\n        window.location.href = \"/home/user\";\n      } else if (response.status === 401) {\n        toast.error(\"Sessão expirada! Faça o Login novamente!\");\n        window.location.href = \"/login\";\n      } else {\n        toast.error(\"Erro ao fazer o login\");\n      }\n    } catch (error) {\n      console.error(\"Error during login: \", error);\n    } finally {\n      setLoading(false); // Set loading to false after the request completes\n    }\n  };\n\n  return {\n    user,\n    password,\n    setUser,\n    setPassword,\n    handleSubmit,\n    loading\n  };\n};\n_s(useAuthentication, \"cVLgtQvJys0FFtkcohb9in5NFEs=\");\nexport default useAuthentication;","map":{"version":3,"names":["useState","toast","useAuthentication","_s","user","setUser","password","setPassword","loading","setLoading","handleSubmit","response","fetch","method","credentials","headers","body","JSON","stringify","error","ok","success","window","location","href","status","console"],"sources":["C:/Users/joaop/OneDrive/Área de Trabalho/Estudo React/Sales Buddy/WEB/web/src/hooks/useAuthentication.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useAuthentication = () => {\r\n  const [user, setUser] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const response = await fetch(\"http://localhost:3000/login\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ user, password }),\r\n      });\r\n\r\n      if (\r\n        user === \"\" ||\r\n        user === null ||\r\n        password === \"\" ||\r\n        password === null\r\n      ) {\r\n        toast.error(\"Preencha os campos para realizar o Login!\");\r\n      } else if (response.ok) {\r\n        toast.success(\"Usuário Logado com sucesso!\");\r\n        window.location.href = \"/home/user\";\r\n      } else if (response.status === 401) {\r\n        toast.error(\"Sessão expirada! Faça o Login novamente!\");\r\n        window.location.href = \"/login\";\r\n      } else {\r\n        toast.error(\"Erro ao fazer o login\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during login: \", error);\r\n    } finally {\r\n      setLoading(false); // Set loading to false after the request completes\r\n    }\r\n  };\r\n\r\n  return { user, password, setUser, setPassword, handleSubmit, loading };\r\n};\r\n\r\nexport default useAuthentication;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFD,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,IAAI;UAAEE;QAAS,CAAC;MACzC,CAAC,CAAC;MAEF,IACEF,IAAI,KAAK,EAAE,IACXA,IAAI,KAAK,IAAI,IACbE,QAAQ,KAAK,EAAE,IACfA,QAAQ,KAAK,IAAI,EACjB;QACAL,KAAK,CAACkB,KAAK,CAAC,2CAA2C,CAAC;MAC1D,CAAC,MAAM,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACtBnB,KAAK,CAACoB,OAAO,CAAC,6BAA6B,CAAC;QAC5CC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,YAAY;MACrC,CAAC,MAAM,IAAIb,QAAQ,CAACc,MAAM,KAAK,GAAG,EAAE;QAClCxB,KAAK,CAACkB,KAAK,CAAC,0CAA0C,CAAC;QACvDG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MACjC,CAAC,MAAM;QACLvB,KAAK,CAACkB,KAAK,CAAC,uBAAuB,CAAC;MACtC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;;EAED,OAAO;IAAEL,IAAI;IAAEE,QAAQ;IAAED,OAAO;IAAEE,WAAW;IAAEG,YAAY;IAAEF;EAAQ,CAAC;AACxE,CAAC;AAACL,EAAA,CA1CID,iBAAiB;AA4CvB,eAAeA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}