{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaop\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Estudo React\\\\Sales Buddy\\\\WEB\\\\web\\\\src\\\\components\\\\ResetPopUp\\\\ResetPopUp.js\";\nimport styles from \"./ResetPopUp.module.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPopUp = ({\n  open,\n  onClose,\n  newPassword,\n  setOpenModal,\n  setNewPassword\n}) => {\n  if (!open) return null;\n  const closePopUp = () => {\n    setOpenModal(false);\n  };\n  const handleResetPassword = async () => {\n    try {\n      const response = await fetch(`http://localhost:3000/resetpassword/${id}`, {\n        method: \"PUT\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          newPassword: btoa(newPassword)\n        })\n      });\n      if (response.ok) {\n        toast.success(\"Senha resetada com sucesso!\");\n        setOpenModal(false); // Fechar o popup após o sucesso\n      } else {\n        toast.error(\"Erro ao resetar senha. Verifique os dados e tente novamente.\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: closePopUp,\n    className: styles.overlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => {\n        e.stopPropagation();\n      },\n      className: styles.modalContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.allContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.content,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.delete,\n            children: \"Digite a sua nova senha: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: styles.inputStyles,\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.quest,\n            children: \"Deseja alterar a sua senha atual?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.btnContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btnPrimary,\n            onClick: \"\",\n            children: \"SIM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btnOutline,\n            onClick: closePopUp,\n            children: \"N\\xC3O\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = ResetPopUp;\nexport default ResetPopUp;\nvar _c;\n$RefreshReg$(_c, \"ResetPopUp\");","map":{"version":3,"names":["styles","ToastContainer","toast","jsxDEV","_jsxDEV","ResetPopUp","open","onClose","newPassword","setOpenModal","setNewPassword","closePopUp","handleResetPassword","response","fetch","id","method","credentials","headers","body","JSON","stringify","btoa","ok","success","error","console","onClick","className","overlay","children","e","stopPropagation","modalContainer","allContainer","content","delete","fileName","_jsxFileName","lineNumber","columnNumber","type","inputStyles","value","onChange","target","quest","btnContainer","btnPrimary","btnOutline","_c","$RefreshReg$"],"sources":["C:/Users/joaop/OneDrive/Área de Trabalho/Estudo React/Sales Buddy/WEB/web/src/components/ResetPopUp/ResetPopUp.js"],"sourcesContent":["import styles from \"./ResetPopUp.module.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst ResetPopUp = ({\r\n  open,\r\n  onClose,\r\n  newPassword,\r\n  setOpenModal,\r\n  setNewPassword,\r\n}) => {\r\n  if (!open) return null;\r\n\r\n  const closePopUp = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3000/resetpassword/${id}`,\r\n        {\r\n          method: \"PUT\",\r\n          credentials: \"include\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ newPassword: btoa(newPassword) }),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        toast.success(\"Senha resetada com sucesso!\");\r\n        setOpenModal(false); // Fechar o popup após o sucesso\r\n      } else {\r\n        toast.error(\r\n          \"Erro ao resetar senha. Verifique os dados e tente novamente.\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div onClick={closePopUp} className={styles.overlay}>\r\n      <div\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}\r\n        className={styles.modalContainer}\r\n      >\r\n        <div className={styles.allContainer}>\r\n          <div className={styles.content}>\r\n            <p className={styles.delete}>Digite a sua nova senha: </p>\r\n            <input\r\n              type=\"password\"\r\n              className={styles.inputStyles}\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n            />\r\n            <p className={styles.quest}>Deseja alterar a sua senha atual?</p>\r\n          </div>\r\n          <div className={styles.btnContainer}>\r\n            <button className={styles.btnPrimary} onClick={\"\"}>\r\n              SIM\r\n            </button>\r\n            <button className={styles.btnOutline} onClick={closePopUp}>\r\n              NÃO\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPopUp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}