{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaop\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Estudo React\\\\Sales Buddy\\\\WEB\\\\web\\\\src\\\\components\\\\ResetPopUp\\\\ResetPopUp.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport styles from \"./ResetPopUp.module.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPopUp = ({\n  open,\n  onClose,\n  newPassword,\n  setOpenModal,\n  setNewPassword,\n  userId,\n  setUserData,\n  userData\n}) => {\n  _s();\n  if (!open) return null;\n  const closePopUp = () => {\n    setOpenModal(false);\n  };\n  useEffect(() => {\n    console.log(userId);\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/user/${userId}`, {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (response.ok) {\n          const userFromApi = await response.json();\n          console.log(userFromApi);\n          setUserData(userFromApi[0]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchUserData();\n  }, [userId]);\n  const handleResetPassword = async () => {\n    try {\n      const encodedPassword = btoa(newPassword);\n      const response = await fetch(`http://localhost:3000/reset-password/${userId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          newPassword: encodedPassword\n        })\n      });\n      if (response.ok) {\n        toast.success(\"Senha resetada com sucesso!\");\n        setOpenModal(false);\n      } else {\n        toast.error(\"Erro ao resetar senha. Tente novamente mais tarde.\");\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Erro ao resetar senha. Tente novamente mais tarde.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: closePopUp,\n    className: styles.overlay,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => {\n        e.stopPropagation();\n      },\n      className: styles.modalContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.allContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.content,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.delete,\n            children: \"Digite a sua nova senha: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: styles.inputStyles,\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.quest,\n            children: \"Deseja alterar a sua senha atual?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.btnContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btnPrimary,\n            onClick: handleResetPassword,\n            children: \"SIM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btnOutline,\n            onClick: closePopUp,\n            children: \"N\\xC3O\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPopUp, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ResetPopUp;\nexport default ResetPopUp;\nvar _c;\n$RefreshReg$(_c, \"ResetPopUp\");","map":{"version":3,"names":["useEffect","styles","ToastContainer","toast","jsxDEV","_jsxDEV","ResetPopUp","open","onClose","newPassword","setOpenModal","setNewPassword","userId","setUserData","userData","_s","closePopUp","console","log","fetchUserData","response","fetch","method","credentials","headers","ok","userFromApi","json","error","handleResetPassword","encodedPassword","btoa","body","JSON","stringify","success","onClick","className","overlay","children","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","modalContainer","allContainer","content","delete","type","inputStyles","value","onChange","target","quest","btnContainer","btnPrimary","btnOutline","_c","$RefreshReg$"],"sources":["C:/Users/joaop/OneDrive/Área de Trabalho/Estudo React/Sales Buddy/WEB/web/src/components/ResetPopUp/ResetPopUp.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport styles from \"./ResetPopUp.module.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst ResetPopUp = ({\r\n  open,\r\n  onClose,\r\n  newPassword,\r\n  setOpenModal,\r\n  setNewPassword,\r\n  userId,\r\n  setUserData,\r\n  userData,\r\n}) => {\r\n  if (!open) return null;\r\n\r\n  const closePopUp = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(userId);\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/user/${userId}`, {\r\n          method: \"GET\",\r\n          credentials: \"include\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const userFromApi = await response.json();\r\n          console.log(userFromApi);\r\n          setUserData(userFromApi[0]);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchUserData();\r\n  }, [userId]);\r\n\r\n  const handleResetPassword = async () => {\r\n    try {\r\n      const encodedPassword = btoa(newPassword);\r\n\r\n      const response = await fetch(\r\n        `http://localhost:3000/reset-password/${userId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ newPassword: encodedPassword }),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        toast.success(\"Senha resetada com sucesso!\");\r\n        setOpenModal(false);\r\n      } else {\r\n        toast.error(\"Erro ao resetar senha. Tente novamente mais tarde.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Erro ao resetar senha. Tente novamente mais tarde.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div onClick={closePopUp} className={styles.overlay}>\r\n      <ToastContainer />\r\n      <div\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}\r\n        className={styles.modalContainer}\r\n      >\r\n        <div className={styles.allContainer}>\r\n          <div className={styles.content}>\r\n            <p className={styles.delete}>Digite a sua nova senha: </p>\r\n            <input\r\n              type=\"password\"\r\n              className={styles.inputStyles}\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n            />\r\n            <p className={styles.quest}>Deseja alterar a sua senha atual?</p>\r\n          </div>\r\n          <div className={styles.btnContainer}>\r\n            <button className={styles.btnPrimary} onClick={handleResetPassword}>\r\n              SIM\r\n            </button>\r\n            <button className={styles.btnOutline} onClick={closePopUp}>\r\n              NÃO\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPopUp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}